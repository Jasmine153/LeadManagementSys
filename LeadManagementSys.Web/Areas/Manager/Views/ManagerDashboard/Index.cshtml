@model LeadManagementSys.Models.DTOs.ManagerDashboardDto
@{
    ViewData["Title"] = "Dashboard";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Welcome to Manager Dashboard</h2>
<div class="row align-items-center mb-3">
    <div class="col-md-8">
        <div class="card shadow-sm text-black mb-0 p-3 cardColor1">
            <div class="card-body text-center">
                <h5 class="card-title">Total Agents</h5>
                <p class="display-4 font-weight-bold">@Model.TotalAgents</p>
            </div>
        </div>
    </div>
    <div class="col-md-4 d-flex justify-content-end align-self-start">
        <a href="/Lead/Create" class="btn custom-button " style="white-space: nowrap;">Create Lead</a>
        <a class="btn custom-button ms-2" id="fetchAgentsBtn" style="white-space: nowrap;">View Agents</a>
    </div>
</div>
<div class="card shadow-lg p-3" style="border-radius: 10px;">
    <div class="card-header bg-light text-dark">
        <h5 class="mb-0">Leads Overview</h5>
    </div>
    <div class="card-body">
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Lead Name</th>
                <th>Assigned To</th>
                <th>Status</th>
                <th>Remarks</th>
                <th>Created At</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
        @foreach (var agent in Model.Agents)
        {
            @foreach (var lead in agent.Leads)
            {
               <tr>
                        <td>@lead.LeadName</td>
                        <td >@agent.AgentName</td>
                        <td>@lead.Status</td>
                        <td>@lead.Remarks</td>
                        <td>@lead.CreatedAt.ToShortDateString()</td>
                        <td>
                            <div class="d-flex gap-2">
                            <a href="/Lead/Edit/@lead.Id" class="btn custom-button btn-sm me-2">Edit</a>
                            @* <form method="post" action="/Lead/Delete" onsubmit="return confirm('Are you sure you want to delete this lead?');"> *@
                            @*     <input type="hidden" name="id" value="@lead.Id" /> *@
                            @*     <button type="submit" class="btn btn-danger btn-sm">Delete</button> *@

                            @* </form> *@
                                    <form id="deleteForm-@lead.Id" action="/Lead/Delete" method="post">
                                    <input type="hidden" name="id" value="@lead.Id" />
                                    <button type="button" class="btn btn-danger btn-sm" onclick="confirmDelete('@lead.Id')">Delete</button>
                                </form>
                            </div>
                        </td>
             </tr>
            }
        }
    </tbody>
</table>
</div>
</div>
<div class="table-responsive mt-4" id="agentsContainer">
</div>
    <script>
        function confirmDelete(leadId) {
            Swal.fire({
                title: "Are you sure?",
                text: "This action cannot be undone!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#d33",
                cancelButtonColor: "#3085D6",
                confirmButtonText: "Yes, delete it!",
                cancelButtonText: "Cancel"
            }).then((result) => {
                if (result.isConfirmed) {
                document.getElementById('deleteForm-' + leadId).submit();
            }
            });
        }
    </script>


        <script>
              document.getElementById("fetchAgentsBtn").addEventListener("click", function () {
            fetch("/Manager/ManagerDashboard/GetAgents")
    .then(response => response.json())
    .then(data => {
    let tableHtml = `
             <div class="card shadow-lg p-3" style="border-radius: 10px;">
                    <div class="card-header bg-light text-dark">
                        <h5 class="mb-0">Agents</h5>
                    </div>
                    <div class="card-body">
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Agent Name</th>
                <th>Email</th>
                <th>Leads Assigned</th>
                 <th>Manager</th>
            </tr>
        </thead>
        <tbody>
            `;

            data.forEach(agent => {
            tableHtml += `
            <tr>
                <td>${agent.name}</td>
                <td>${agent.email}</td>
                <td>${agent.numberOfLeadsAssigned}</td>
                <td>${agent.managerName}</td>
            </tr>
            `;
            });

            tableHtml += `
        </tbody>
    </table>
    </div>
    </div>`;
    document.getElementById("agentsContainer").innerHTML = tableHtml;
    })
    .catch(error => console.error("Error fetching agents:", error));
    });

        </script>
    
