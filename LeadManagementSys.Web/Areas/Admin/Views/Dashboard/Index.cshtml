@model LeadManagementSys.Models.DTOs.DashboardSummaryDto

@{
    ViewData["Title"] = "Dashboard";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 class="d-inline-block mb-2">Welcome to Admin Dashboard</h2>

<div class="d-inline-block float-end mb-2">
    <div class="btn-group me-2">
        <button type="button" class="btn btn-dark dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
            Create
        </button>
        <ul class="dropdown-menu">
            <li><a class="dropdown-item" href="/Identity/Account/Register?role=Admin">Create Admin</a></li>
            <li><a class="dropdown-item" href="/Identity/Account/Register?role=Agent">Create Agent</a></li>
            <li><a class="dropdown-item" href="/Identity/Account/Register?role=Manager">Create Manager</a></li>
            <li><a class="dropdown-item" href="/Lead/Create">Create Lead</a></li>
        </ul>
    </div>

    <div class="btn-group">
        <button type="button" class="btn custom-button dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
            Fetch
        </button>
        <ul class="dropdown-menu">
            <li><button class="dropdown-item" id="fetchLeadsBtn">Fetch Leads</button></li>
            <li><button class="dropdown-item" id="fetchAgentsBtn">Fetch Agents</button></li>
            <li><button class="dropdown-item" id="fetchManagersBtn">Fetch Managers</button></li>
        </ul>
    </div>
</div>

<div class="row">
    <div class="col-md-3">
        <div class="card text-black mb-3 cardColor1">
            <div class="card-body">
                <h5 class="card-title">Total Admins</h5>
                <p class="card-text">@Model.TotalAdmins</p>
            </div>
        </div>
    </div>
     
    <div class="col-md-3">
        <div class="card text-black mb-3 cardColor2">
            <div class="card-body">
                <h5 class="card-title color-black">Total Managers</h5>
                <p class="card-text">@Model.TotalManagers</p>
            </div>
        </div>
    </div>

    <div class="col-md-3">
        <div class="card text-black mb-3 cardColor3">
            <div class="card-body">
                <h5 class="card-title">Total Agents</h5>
                <p class="card-text">@Model.TotalAgents</p>
            </div>
        </div>
    </div>

    <div class="col-md-3">
        <div class="card text-black mb-3 cardColor4">
            <div class="card-body">
                <h5 class="card-title">Total Leads</h5>
                <p class="card-text">@Model.TotalLeads</p> 
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card text-black mb-3 cardColor5">
            <div class="card-body">
                <h5 class="card-title">Leads by Status</h5>
                <ul class="list-group">
                    @foreach (var item in Model.LeadsByStatus)
                    {
                        <li class="list-group-item d-flex justify-content-between align-items-center text-black">
                            @item.Key
                            <span class="badge badge-primary badge-pill text-black">@item.Value</span>
                        </li>
                    }
                </ul>
            </div>
        </div>
    </div>


    <div class="table-responsive mt-4" id="leadsContainer"> 
    
     </div>

    <div class="table-responsive mt-4" id="agentsContainer">
     
    </div>

    <div class="table-responsive mt-4" id="managersContainer">
     
    </div>

@section Scripts {
    <script>
        document.getElementById("fetchLeadsBtn").addEventListener("click", function () {
            fetch("/Lead/GetLeads")
                .then(response => response.json())
                .then(data => {
                    let tableHtml = `
                <div class="card shadow-lg p-3" style="border-radius: 10px;">
            <div class="card-header bg-light text-dark">
                        <h5 class="mb-0" style="color:#51057d">Leads</h5>
            </div>
            <div class="card-body">
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th>Lead Name</th>
                                    <th>Assigned To</th>
                                    <th>Status</th>
                                    <th>Remarks</th>
                                    <th>Created At</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>
                    `;

                    data.forEach(lead => {
                        tableHtml += `
                            <tr>
                                <td>${lead.leadName}</td>
                                <td>${lead.assignedToName}</td>
                                <td>${lead.status}</td>
                                <td>${lead.remarks}</td>
                                <td>${new Date(lead.createdAt).toLocaleDateString()}</td>
                                    <td>
                                         <div class="d-flex gap-2">
                                              <a href="/Lead/Edit/${lead.id}" class="btn custom-button btn-sm me-2">Edit</a>
                                                     <form id="deleteForm-${lead.id}" action="/Lead/Delete" method="post">
                                            <input type="hidden" name="id" value="${lead.id}" />
                                            <button type="button" class="btn btn-danger btn-sm" onclick="confirmDelete('${lead.id}')">Delete</button>
                                        </form>
                                        </div>
                                    </td>
                            </tr>
                        `;
                    });

                    tableHtml += `
                            </tbody>
                        </table>
                        </div>
                        </div>
                    `;
                    document.getElementById("leadsContainer").innerHTML = tableHtml;
                })
                .catch(error => console.error("Error fetching leads:", error));
        });
   
  
    document.getElementById("fetchAgentsBtn").addEventListener("click", function () {
            fetch("/Admin/Dashboard/GetAgents")
    .then(response => response.json())
    .then(data => {
    let tableHtml = `
             <div class="card shadow-lg p-3" style="border-radius: 10px;">
                    <div class="card-header bg-light text-dark">
                                        <h5 class="mb-0" style="color:#015c01">Agents</h5>
                    </div>
                    <div class="card-body">
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Agent Name</th>
                <th>Email</th>
                <th>Leads Assigned</th>
                <th>Manager</th>
            </tr>
        </thead>
        <tbody>
            `;

            data.forEach(agent => {
            tableHtml += `
            <tr>
                <td>${agent.name}</td>
                <td>${agent.email}</td>
                <td>${agent.numberOfLeadsAssigned}</td>
                <td>${agent.managerName}</td>
            </tr>
            `;
            });

            tableHtml += `
        </tbody>
    </table>
    </div>
    </div>`;
    document.getElementById("agentsContainer").innerHTML = tableHtml;
    })
    .catch(error => console.error("Error fetching agents:", error));
    });

   
    document.getElementById("fetchManagersBtn").addEventListener("click", function () {
            fetch("/Admin/Dashboard/GetManagers")
    .then(response => response.json())
    .then(data => {
    let tableHtml = `
            <div class="card shadow-lg p-3" style="border-radius: 10px;">
                       <div class="card-header bg-light text-dark">
                                   <h5 class="mb-0" style="color:#015f7d">Managers</h5>
                       </div>
                       <div class="card-body">
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Manager Name</th>
                <th>Email</th>
                         <th>Admin Assigned</th>
            </tr>
        </thead>
        <tbody>
            `;

            data.forEach(manager => {
            tableHtml += `
            <tr>
                <td>${manager.name}</td>
                <td>${manager.email}</td>
                <td>${manager.adminName ?? 'N/A'}</td>
            </tr>
            `;
            });

            tableHtml += `
        </tbody>
    </table>
    </div>
    </div>
    `;
    document.getElementById("managersContainer").innerHTML = tableHtml;
    })
    .catch(error => console.error("Error fetching managers:", error));
    });

    </script>
}

    <script>
         function confirmDelete(leadId) {
            Swal.fire({
                title: "Are you sure?",
                text: "This action cannot be undone!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#d33",
                cancelButtonColor: "#3085D6",
                confirmButtonText: "Yes, delete it!",
                cancelButtonText: "Cancel"
            }).then((result) => {
                if (result.isConfirmed) {
                    document.getElementById(`deleteForm-${leadId}`).submit();
                }
            });
        }
    </script>
</div>
